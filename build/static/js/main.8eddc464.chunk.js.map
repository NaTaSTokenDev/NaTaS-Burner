{"version":3,"sources":["components/ConnectWallet.tsx","components/Crunchy_DeMN.tsx","components/Crunchy_Natas.tsx","components/DisconnectWallet.tsx","components/MyNewBalance.tsx","components/MyNewDeMNs.tsx","components/SendDeMN.tsx","lib/axios.ts","components/MyDeMNs_SII.tsx","components/MyDeMNs_SIII.tsx","components/MyDeMNs_SIV.tsx","components/MyDeMNs_SI.tsx","components/DeMNDropTotal.tsx","components/DeMNDropWeek.tsx","App.tsx","services/balance.ts","serviceWorker.js","index.js"],"names":["ConnectButton","Tezos","setContract","setWallet","setUserAddress","setUserBalance","contractAddress","setStorage","setBeaconConnection","setPublicToken","wallet","useState","loadingNano","setLoadingNano","setup","userAddress","a","tz","getBalance","balance","toNumber","at","contract","storage","connectWallet","requestPermissions","network","type","NetworkType","MAINNET","rpcUrl","getPKH","console","log","connectNano","TransportU2F","create","transport","ledgerSigner","LedgerSigner","setSignerProvider","signer","publicKeyHash","useEffect","BeaconWallet","name","preferredNetwork","disableDefaultEvents","eventHandlers","BeaconEvent","PAIR_INIT","handler","defaultEventCallbacks","PAIR_SUCCESS","data","publicKey","setWalletProvider","client","getActiveAccount","className","onClick","disabled","Crunchy_DeMN","myuserAddress","url","useFetch","error","length","undefined","num","Math","pow","Crunchy_Natas","DisconnectButton","setTezos","disconnectWallet","tezosTK","TezosToolkit","removeAllAccounts","removeAllPeers","destroy","MyNewBalance","MyNewDeMNs","tokensEarned","series","SendDeMN","recipient","amount","loading","setLoading","sendTransfer","address","methods","transfer","from_","txs","to_","token_id","send","result","id","axios","MyDeMNs_SII","pixeldemncontract","i","bob","ipfslink2","JSON","stringify","toString","substring","dangerouslySetInnerHTML","__html","MyDeMNs_SIII","ipfsimage","pic","MyDeMNs_SIV","replace","replaceAll","MyDeMNs_SI","DeMNDropTotal","resul","Number","DeMNDropWeek","App","publicToken","userBalance","copiedPublicToken","setCopiedPublicToken","beaconConnection","activeTab","setActiveTab","deMNTokensEarnedBySeries","natasBalance","setNatasBalance","demnBalance","setDemnBalance","get","then","res","find","item","key","value","getDemnBalance","isNaN","src","alt","href","map","index","width","height","target","qr","qrcode","addData","make","createImgTag","generateQrCode","navigator","clipboard","writeText","setTimeout","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.8eddc464.chunk.js","sourcesContent":["import {\r\n  BeaconEvent,\r\n  defaultEventCallbacks,\r\n  NetworkType,\r\n} from \"@airgap/beacon-sdk\";\r\nimport TransportU2F from \"@ledgerhq/hw-transport-u2f\";\r\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\r\nimport { LedgerSigner } from \"@taquito/ledger-signer\";\r\nimport { TezosToolkit } from \"@taquito/taquito\";\r\nimport React, { Dispatch, SetStateAction, useEffect, useState } from \"react\";\r\n\r\ntype ButtonProps = {\r\n  Tezos: TezosToolkit;\r\n  setContract: Dispatch<SetStateAction<any>>;\r\n  setWallet: Dispatch<SetStateAction<any>>;\r\n  setUserAddress: Dispatch<SetStateAction<string>>;\r\n  setUserBalance: Dispatch<SetStateAction<number>>;\r\n  setStorage: Dispatch<SetStateAction<number>>;\r\n  contractAddress: string;\r\n  setBeaconConnection: Dispatch<SetStateAction<boolean>>;\r\n  setPublicToken: Dispatch<SetStateAction<string | null>>;\r\n  wallet: BeaconWallet;\r\n};\r\n\r\nconst ConnectButton = ({\r\n  Tezos,\r\n  setContract,\r\n  setWallet,\r\n  setUserAddress,\r\n  setUserBalance,\r\n  setStorage,\r\n  contractAddress,\r\n  setBeaconConnection,\r\n  setPublicToken,\r\n  wallet,\r\n}: ButtonProps): JSX.Element => {\r\n  const [loadingNano, setLoadingNano] = useState<boolean>(false);\r\n\r\n  const setup = async (userAddress: string): Promise<void> => {\r\n    setUserAddress(userAddress);\r\n    // updates balance\r\n    const balance = await Tezos.tz.getBalance(userAddress);\r\n    setUserBalance(balance.toNumber());\r\n    // creates contract instance\r\n    const contract = await Tezos.wallet.at(contractAddress);\r\n    const storage: any = await contract.storage();\r\n    setContract(contract);\r\n    // setStorage(storage.toNumber());\r\n  };\r\n\r\n  const connectWallet = async (): Promise<void> => {\r\n    try {\r\n      await wallet.requestPermissions({\r\n        network: {\r\n          type: NetworkType.MAINNET,\r\n          rpcUrl: \"https://mainnet.api.tez.ie\",\r\n        },\r\n      });\r\n      // gets user's address\r\n      const userAddress = await wallet.getPKH();\r\n      await setup(userAddress);\r\n      setBeaconConnection(true);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const connectNano = async (): Promise<void> => {\r\n    try {\r\n      setLoadingNano(true);\r\n      const transport = await TransportU2F.create();\r\n      const ledgerSigner = new LedgerSigner(transport, \"44'/1729'/0'/0'\", true);\r\n\r\n      Tezos.setSignerProvider(ledgerSigner);\r\n\r\n      //Get the public key and the public key hash from the Ledger\r\n      const userAddress = await Tezos.signer.publicKeyHash();\r\n      await setup(userAddress);\r\n    } catch (error) {\r\n      console.log(\"Error!\", error);\r\n      setLoadingNano(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      // creates a wallet instance\r\n      const wallet = new BeaconWallet({\r\n        name: \"NaTaS Burner\",\r\n        preferredNetwork: NetworkType.MAINNET,\r\n        disableDefaultEvents: true, // Disable all events / UI. This also disables the pairing alert.\r\n        eventHandlers: {\r\n          // To keep the pairing alert, we have to add the following default event handlers back\r\n          [BeaconEvent.PAIR_INIT]: {\r\n            handler: defaultEventCallbacks.PAIR_INIT,\r\n          },\r\n          [BeaconEvent.PAIR_SUCCESS]: {\r\n            handler: (data) => setPublicToken(data.publicKey),\r\n          },\r\n        },\r\n      });\r\n      Tezos.setWalletProvider(wallet);\r\n      setWallet(wallet);\r\n      // checks if wallet was connected before\r\n      const activeAccount = await wallet.client.getActiveAccount();\r\n      if (activeAccount) {\r\n        const userAddress = await wallet.getPKH();\r\n        await setup(userAddress);\r\n        setBeaconConnection(true);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"buttons\">\r\n      <button className=\"button\" onClick={connectWallet}>\r\n        <span>\r\n          <i className=\"fas fa-wallet\"></i>&nbsp;Connect w/ wallet\r\n        </span>\r\n      </button>\r\n      <button className=\"button\" disabled={loadingNano} onClick={connectNano}>\r\n        {loadingNano ? (\r\n          <span>\r\n            <i className=\"fas fa-spinner fa-spin\"></i>&nbsp; Loading, please\r\n            wait\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <i className=\"fab fa-usb\"></i>&nbsp;Connect w/ Ledger Nano\r\n          </span>\r\n        )}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ConnectButton;\r\n","import React, { useState } from \"react\";\r\nimport useFetch from \"react-fetch-hook\";\r\n\r\ninterface Post {\r\n  balance: any;\r\n  allowances: any;\r\n  frozen_balance: string;\r\n}\r\n\r\ninterface DemnBalanceProps {\r\n  myuserAddress: string;\r\n}\r\nconst Crunchy_DeMN = ({ myuserAddress }: DemnBalanceProps) => {\r\n  const url = `https://staging.api.tzkt.io/v1/bigmaps/14780/keys?active=true&key=${myuserAddress}&select=value`;\r\n  const thisuser = myuserAddress;\r\n  const { data, error } = useFetch<Post[]>(url);\r\n  if (error) return <p>There is an error.</p>;\r\n  if (!data) return <span>Loading...</span>;\r\n  if (data.length == 1) {\r\n    {\r\n      if (data[0].balance != undefined) {\r\n        let num = data[0].balance / Math.pow(10, 6);\r\n        return <span>{num}</span>;\r\n      }\r\n    }\r\n  }\r\n\r\n  return <span>0</span>;\r\n};\r\nexport default Crunchy_DeMN;\r\n","import React, { useState } from \"react\";\r\nimport useFetch from \"react-fetch-hook\";\r\n\r\ninterface Post {\r\n  balance: number;\r\n  allowances: any;\r\n  frozen_balance: string;\r\n}\r\n\r\ninterface DemnBalanceProps {\r\n  myuserAddress: string;\r\n}\r\nconst Crunchy_Natas = ({ myuserAddress }: DemnBalanceProps) => {\r\n  const url = `https://staging.api.tzkt.io/v1/bigmaps/16858/keys?active=true&key=${myuserAddress}&select=value`;\r\n  const thisuser = myuserAddress;\r\n  const { data, error } = useFetch<Post[]>(url);\r\n  if (error) return <p>There is an error.</p>;\r\n  if (!data) return <span>Loading...</span>;\r\n  if (data.length == 1) {\r\n    {\r\n      if (data[0].balance != undefined) {\r\n        let num = data[0].balance / Math.pow(10, 6);\r\n        return <span>{num}</span>;\r\n      }\r\n    }\r\n  }\r\n  return <p>0</p>;\r\n};\r\nexport default Crunchy_Natas;\r\n","import { BeaconWallet } from \"@taquito/beacon-wallet\";\r\nimport { TezosToolkit } from \"@taquito/taquito\";\r\nimport React, { Dispatch, SetStateAction } from \"react\";\r\n\r\ninterface ButtonProps {\r\n  wallet: BeaconWallet | null;\r\n  setPublicToken: Dispatch<SetStateAction<string | null>>;\r\n  setUserAddress: Dispatch<SetStateAction<string>>;\r\n  setUserBalance: Dispatch<SetStateAction<number>>;\r\n  setWallet: Dispatch<SetStateAction<any>>;\r\n  setTezos: Dispatch<SetStateAction<TezosToolkit>>;\r\n  setBeaconConnection: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nconst DisconnectButton = ({\r\n  wallet,\r\n  setPublicToken,\r\n  setUserAddress,\r\n  setUserBalance,\r\n  setWallet,\r\n  setTezos,\r\n  setBeaconConnection,\r\n}: ButtonProps): JSX.Element => {\r\n  const disconnectWallet = async (): Promise<void> => {\r\n    //window.localStorage.clear();\r\n    setUserAddress(\"\");\r\n    setUserBalance(0);\r\n    setWallet(null);\r\n    const tezosTK = new TezosToolkit(\"https://api.tez.ie/rpc/granadanet\");\r\n    setTezos(tezosTK);\r\n    setBeaconConnection(false);\r\n    setPublicToken(null);\r\n    console.log(\"disconnecting wallet\");\r\n    if (wallet) {\r\n      await wallet.client.removeAllAccounts();\r\n      await wallet.client.removeAllPeers();\r\n      await wallet.client.destroy();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"buttons\">\r\n      <button className=\"button\" onClick={disconnectWallet}>\r\n        <i className=\"fas fa-times\"></i>&nbsp; Disconnect wallet\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DisconnectButton;\r\n","import React from \"react\";\r\n\r\nconst MyNewBalance = ({ balance, name }: { balance: number; name: string }) => {\r\n  return (\r\n    <div>\r\n      <h2>{name} Token Balance:</h2>\r\n      <h3>{balance}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyNewBalance;\r\n","import React from \"react\";\r\n\r\nfunction MyNewDeMNs({\r\n  tokensEarned,\r\n  series,\r\n}: {\r\n  tokensEarned: number;\r\n  series: number;\r\n}) {\r\n  return (\r\n    <div>\r\n      <h2>Your Series {series} PixelDeMNs</h2>\r\n      <p>{tokensEarned}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MyNewDeMNs;\r\n","import { TezosToolkit } from \"@taquito/taquito\";\r\nimport React, { Dispatch, SetStateAction, useState } from \"react\";\r\n\r\nconst SendDeMN = ({\r\n  Tezos,\r\n  setUserBalance,\r\n  userAddress\r\n}: {\r\n  Tezos: TezosToolkit;\r\n  setUserBalance: Dispatch<SetStateAction<number>>;\r\n  userAddress: string;\r\n}): JSX.Element => {\r\n  const [recipient, setRecipient] = useState<string>(\"tz1XQZVcQbSA56cf5ZKGGeM9jH4qzfwYL8rk\");\r\n  const [amount, setAmount] = useState<string>(\"1\");\r\n  const [loading, setLoading] = useState<boolean>(false);\r\n  //const wallet = new BeaconWallet({ name: \"Beacon Docs\" });\r\n\r\n\r\n  const sendTransfer = async (): Promise<void> =>  {\r\n    if (recipient && amount)  {\r\n      setLoading(true);\r\n     \r\n      try {\r\n        const op = await Tezos.wallet\r\n      //  Tezos.setWalletProvider(wallet);\r\n        const address = userAddress; \r\n        const contract = await Tezos.wallet.at(\r\n          \"KT1GBgCd5dk7v4TSzWvtk1X64TxMyG4r7eRX\"\r\n         );\r\n        const TOKEN_ID = 0; \r\n        const result = await contract.methods\r\n        .transfer([\r\n          {\r\n            from_: address,\r\n            txs: [\r\n              {\r\n                to_: recipient,\r\n                token_id: TOKEN_ID,\r\n                amount: 1,\r\n              },\r\n            ],\r\n          },\r\n        ])\r\n        .send();\r\n        await result;\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n      \r\n      // As soon as the operation is broadcast, you will receive the operation hash\r\n       // return result.opHash;\r\n    \r\n\r\n\r\n      setLoading(true);\r\n  //    try {\r\n  //      const op = await Tezos.wallet\r\n  //        .transfer({ to: recipient, amount: parseInt(amount) })\r\n   //       .send();\r\n   //     await op.confirmation();\r\n       \r\n   //     const balance = await Tezos.tz.getBalance(userAddress);\r\n    //    setUserBalance(balance.toNumber());\r\n    //  } catch (error) {\r\n    //    console.log(error);\r\n    //  } finally {\r\n     //   setLoading(false);\r\n     // }\r\n    }\r\n      }     ;\r\n\r\n  return (\r\n      <div id=\"transfer-inputs\">\r\n      <button\r\n        className=\"button\"\r\n        disabled={!recipient && !amount}  \r\n        onClick={sendTransfer}\r\n      >\r\n        {loading ? (\r\n          <span>\r\n            <i className=\"fas fa-spinner fa-spin\"></i>&nbsp; Processing\r\n          </span>\r\n        ) : (\r\n          <span>\r\n            <i className=\"far fa fa-fire\"></i>&nbsp; BURN!\r\n          </span>\r\n        )}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SendDeMN;\r\n","import axios from 'axios';\r\n\r\nexport default axios;\r\n","import React, { Dispatch, SetStateAction } from \"react\";\r\nimport useFetch from \"react-fetch-hook\";\r\n\r\ninterface IPost {\r\n  data: string;\r\n}\r\n\r\ninterface IDemnBalanceProps {\r\n  myuserAddress: string;\r\n  pixeldemncontract: string;\r\n}\r\n\r\nfunction MyDeMNs_SII({\r\n  myuserAddress,\r\n  pixeldemncontract,\r\n}: IDemnBalanceProps) {\r\n  var url = `https://staging.api.tzkt.io/v1/tokens/balances?active=true&token.contract=${pixeldemncontract}&account=${myuserAddress}&select=token.metadata.image`;\r\n  let i = 0;\r\n  let bob = \"\";\r\n  var ipfsimage = \"\";\r\n  const { data, error } = useFetch<IPost[]>(url);\r\n  if (error) return <span>Network connection?</span>;\r\n  if (!data) return <span>Loading...</span>;\r\n  for (i = 0; i < data.length; i++) {\r\n    var ipfslink = JSON.stringify(data[i]);\r\n    var ipfslink2 = ipfslink.toString();\r\n    var ipfslink2 = ipfslink2.substring(7);\r\n    var ipfsimage = `<img src = \"https://ipfs.io/ipfs/${ipfslink2}\" width=\"150\" height=\"150\">`;\r\n\r\n    bob = ipfsimage + \" \" + bob;\r\n  }\r\nif (bob != \"\") {\r\n  return (\r\n    <div>\r\n      <div dangerouslySetInnerHTML={{ __html: bob }} />\r\n    </div>\r\n  );}\r\n  else {\r\n  return  (\r\n    <div>\r\n      <div dangerouslySetInnerHTML={{ __html: `<img\r\n  src=\"/images/NoDeMNsSII.png\"\r\n  width=\"150\"\r\n  height=\"150\"\r\n  alt=\"Default PixelDeMN Image Placetaker\"\r\n/>` }} />\r\n    </div>\r\n  );}\r\n}\r\n\r\nexport default MyDeMNs_SII;\r\n","import { stringify } from \"querystring\";\r\nimport React, { Dispatch, SetStateAction } from \"react\";\r\nimport useFetch from \"react-fetch-hook\";\r\n\r\ninterface IPost {\r\n  data: string;\r\n}\r\n\r\ninterface IDemnBalanceProps {\r\n  myuserAddress: string;\r\n  pixeldemncontract: string;\r\n}\r\n\r\nfunction MyDeMNs_SIII({\r\n  myuserAddress,\r\n  pixeldemncontract,\r\n}: IDemnBalanceProps) {\r\n  var url = `https://staging.api.tzkt.io/v1/tokens/balances?active=true&token.contract=${pixeldemncontract}&account=${myuserAddress}&select=token.metadata.name`;\r\n  let i = 0;\r\n  let bob = \"\";\r\n  var ipfsimage = \"\";\r\n  const { data, error } = useFetch<IPost[]>(url);\r\n  if (error) return <p>Network connection?</p>;\r\n  if (!data) return <span>Loading...</span>;\r\n  console.log(data)\r\n  for (i = 0; i < data.length; i++) {\r\n    let pic = data[i]\r\n  \r\n    var ipfsimage = `<img src = \"/images/Series III/${pic}.gif\" width=\"150\" height=\"150\">`;\r\n    console.log(ipfsimage)\r\n    bob = ipfsimage + \" \" + bob;\r\n  }\r\nif (bob != \"\") {\r\n  return (\r\n    <div>\r\n      <div dangerouslySetInnerHTML={{ __html: bob }} />\r\n    </div>\r\n  );}\r\n  else {\r\n  return  (\r\n    <div>\r\n      <div dangerouslySetInnerHTML={{ __html: `<img\r\n  src=\"/images/NoDeMNsSIII.png\"\r\n  width=\"150\"\r\n  height=\"150\"\r\n  alt=\"Default PixelDeMN Image Placetaker\"\r\n/>` }} />\r\n    </div>\r\n  );}\r\n}\r\nexport default MyDeMNs_SIII;\r\n","import { stringify } from \"querystring\";\r\nimport React, { Dispatch, SetStateAction } from \"react\";\r\nimport useFetch from \"react-fetch-hook\";\r\n\r\ninterface IPost {\r\n  data: string[];\r\n}\r\n\r\ninterface IDemnBalanceProps {\r\n  myuserAddress: string;\r\n  pixeldemncontract: string;\r\n}\r\n\r\nfunction MyDeMNs_SIV({\r\n  myuserAddress,\r\n  pixeldemncontract,\r\n}: IDemnBalanceProps) {\r\n  var url = `https://staging.api.tzkt.io/v1/tokens/balances?active=true&token.contract=KT1KEa8z6vWXDJrVqtMrAeDVzsvxat3kHaCE&account=tz1Pk7dgfsqsFnHyGzfkdyuADaYU4atYEd7C&select=token.metadata.name`;\r\n  let i = 0;\r\n  let bob = \"\";\r\n  var ipfsimage = \"\";\r\n  const { data, error } = useFetch<IPost[]>(url);\r\n  if (error) return <p>Network connection?</p>;\r\n  if (!data) return <span>Loading...</span>;\r\n  console.log(data)\r\n  for (i = 0; i < data.length; i++) {\r\n    // let pic = data[i]\r\n    let pic = JSON.stringify(data[i]);\r\n   pic = pic.replace(/\\s/g, ``);\r\n   pic = pic.replace(/[a-z]/gi, '') \r\n   pic = pic.replace(\"#\",\"\");\r\n   pic = pic.replace(\"-\",\"\");\r\n   pic = pic.replaceAll('\"', '');\r\n    var ipfsimage = `<img src = \"/images/Series IV/${pic}.png\" width=\"150\" height=\"150\">`;\r\n    console.log(ipfsimage)\r\n    bob = ipfsimage + \" \" + bob;\r\n  }\r\nif (bob != \"\") {\r\n  return (\r\n    <div>\r\n      <div dangerouslySetInnerHTML={{ __html: bob }} />\r\n    </div>\r\n  );}\r\n  else {\r\n  return  (\r\n    <div>\r\n      <div dangerouslySetInnerHTML={{ __html: `<img\r\n  src=\"/images/NoDeMNsSIV.png\"\r\n  width=\"150\"\r\n  height=\"150\"\r\n  alt=\"Default PixelDeMN Image Placetaker\"\r\n/>` }} />\r\n    </div>\r\n  );}\r\n}\r\nexport default MyDeMNs_SIV;\r\n","import React, { Dispatch, SetStateAction } from \"react\";\r\nimport useFetch from \"react-fetch-hook\";\r\nimport { IPost } from \"../types/IPost\";\r\n\r\ninterface IDemnBalanceProps {\r\n  myuserAddress: string;\r\n}\r\n\r\nconst MyDeMNs_SI = ({\r\n  myuserAddress,\r\n}: IDemnBalanceProps) => {\r\n  var url = `https://staging.api.tzkt.io/v1/tokens/balances?account=${myuserAddress}&balance=1&token.metadata.symbol=OBJKT&token.metadata.tags.[*]=PixelDeMNs&select=token.metadata.artifactUri`;\r\n  let i = 0;\r\n  let bob = \"\";\r\n  var ipfsimage = \"\";\r\n  const { data, error } = useFetch<IPost[]>(url);\r\n  if (error) return <p>Network connection?</p>;\r\n  if (!data) return <span>Loading...</span>;\r\n  for (i = 0; i < data.length; i++) {\r\n    var ipfslink = JSON.stringify(data[i]);\r\n    var ipfslink2 = ipfslink.toString();\r\n    var ipfslink2 = ipfslink2.substring(7);\r\n    var ipfsimage = `<img src = \"https://ipfs.io/ipfs/${ipfslink2} width=\"150\" height=\"150\"/>`;\r\n    bob = ipfsimage + \" \" + bob;\r\n  }\r\nif (bob != \"\") {\r\n  return (\r\n    <div>\r\n      <div dangerouslySetInnerHTML={{ __html: bob }} />\r\n    </div>\r\n  );}\r\n  else {\r\n  return  (\r\n    <div>\r\n      <div dangerouslySetInnerHTML={{ __html: `<img\r\n  src=\"/images/NoDeMNsSI.png\"\r\n  width=\"150\"\r\n  height=\"150\"\r\n  alt=\"Default PixelDeMN Image Placetaker\"\r\n/>` }} />\r\n    </div>\r\n  );}\r\n}\r\nexport default MyDeMNs_SI;\r\n","import React, { Dispatch, SetStateAction } from \"react\";\r\nimport useFetch from \"react-fetch-hook\";\r\n\r\n//interface IPost {\r\n//  data: number;\r\n//}\r\n\r\ninterface IDemnBalanceProps {\r\n  myuserAddress: string;\r\n  pixeldemncontract: string;\r\n}\r\n\r\nfunction DeMNDropTotal({\r\n  myuserAddress,\r\n  pixeldemncontract,\r\n}: IDemnBalanceProps) {\r\n  var url = `https://staging.api.tzkt.io/v1/tokens/transfers?from=tz1SrztDp8MVcbom6T8FMPSRFns4PGFoFqxx&token.contract=KT1GBgCd5dk7v4TSzWvtk1X64TxMyG4r7eRX&to=${myuserAddress}&select=amount`;\r\n  let i = 0;\r\n  let bob = 0;\r\n  const { data, error } = useFetch<number[]>(url);\r\n  if (error) return <p>Network connection?</p>;\r\n  if (!data) return <span>Loading...</span>;\r\n  for (i = 0; i < data.length; i++) {\r\n    var resul = JSON.stringify(data[i]);\r\n    var resul = resul.substring(1);\r\n    var resul = resul.substring(0, resul.length - 1);\r\n    bob = Number(resul)\r\n  }\r\n  return (\r\n    <div>\r\n      {bob / Math.pow(10, 8)}\r\n          </div>\r\n  );\r\n}\r\n\r\nexport default DeMNDropTotal;\r\n","import React, { Dispatch, SetStateAction } from \"react\";\r\nimport useFetch from \"react-fetch-hook\";\r\n\r\n//interface IPost {\r\n//  data: number;\r\n//}\r\n\r\ninterface IDemnBalanceProps {\r\n  myuserAddress: string;\r\n  pixeldemncontract: string;\r\n}\r\n\r\nfunction DeMNDropWeek({\r\n  myuserAddress,\r\n  pixeldemncontract,\r\n}: IDemnBalanceProps) {\r\n  var url = `https://staging.api.tzkt.io/v1/tokens/transfers?from=tz1SrztDp8MVcbom6T8FMPSRFns4PGFoFqxx&token.contract=KT1GBgCd5dk7v4TSzWvtk1X64TxMyG4r7eRX&to=tz1VhCvo2M7ne6GihA46hqhEoPceFo1Kbhg5&select=amount`;\r\n  let i = 0;\r\n  let bob = 0;\r\n  const { data, error } = useFetch<number[]>(url);\r\n  if (error) return <p>Network connection?</p>;\r\n  if (!data) return <span>Loading...</span>;\r\n  i = data.length - 1  \r\n  return (\r\n    <div>\r\n      {data[i] / Math.pow(10, 8)}\r\n          </div>\r\n  );\r\n}\r\n\r\nexport default DeMNDropWeek;\r\n","import { TezosToolkit } from \"@taquito/taquito\";\r\n// import { TezBridgeSigner } from '@taquito/tezbridge-signer'\r\nimport qrcode from \"qrcode-generator\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport ConnectButton from \"./components/ConnectWallet\";\r\nimport Crunchy_DeMN from \"./components/Crunchy_DeMN\";\r\nimport Crunchy_Natas from \"./components/Crunchy_Natas\";\r\nimport DisconnectButton from \"./components/DisconnectWallet\";\r\nimport MyNewBalance from \"./components/MyNewBalance\";\r\nimport MyNewDeMNs from \"./components/MyNewDeMNs\";\r\nimport SendDeMN from \"./components/SendDeMN\";\r\n// import { SERIES_API_LINK } from \"./config/const\";\r\nimport { getDemnBalance, getNatasBalance } from \"./services/balance\";\r\n// import { getPixelDeMN_SI, getPixelDeMN_SII } from \"./services/pixeldemnapi\";\r\n// import { getPixeldemncount } from \"./services/contract\";\r\nimport MyDeMNs_SII from \"./components/MyDeMNs_SII\";\r\nimport MyDeMNs_SIII from \"./components/MyDeMNs_SIII\";\r\nimport MyDeMNs_SIV from \"./components/MyDeMNs_SIV\";\r\nimport MyDeMNs_SI from \"./components/MyDeMNs_SI\";\r\n// import MyDeMNs from \"./components/MyDeMNs\";\r\nimport DeMNDropTotal from \"./components/DeMNDropTotal\";\r\nimport DeMNDropWeek from \"./components/DeMNDropWeek\";\r\n\r\nconst App: React.FC = () => {\r\n  const [Tezos, setTezos] = useState<TezosToolkit>(\r\n    new TezosToolkit(\"https:/mainnet.api.tez.ie\")\r\n  );\r\n\r\n  const [contract, setContract] = useState<any>(undefined);\r\n  const [publicToken, setPublicToken] = useState<string | null>(\"\");\r\n  const [wallet, setWallet] = useState<any>(null);\r\n  const [userAddress, setUserAddress] = useState<string>(\"\");\r\n  const [userBalance, setUserBalance] = useState<number>(0);\r\n  const [storage, setStorage] = useState<number>(0);\r\n  const [copiedPublicToken, setCopiedPublicToken] = useState<boolean>(false);\r\n  const [beaconConnection, setBeaconConnection] = useState<boolean>(false);\r\n  const [activeTab, setActiveTab] = useState<string>(\"infotab\");\r\n  const contractAddress: string = \"KT1GBgCd5dk7v4TSzWvtk1X64TxMyG4r7eRX\";\r\n  const [totalDeMNTokensEarned, setTotalDeMNTokensEarned] = useState(0);\r\n  const [deMNTokensEarnedBySeries, setDeMNTokensEarnedBySeries] = useState<\r\n    number[]\r\n  >([]);\r\n  const [natasBalance, setNatasBalance] = useState(0);\r\n  const [demnBalance, setDemnBalance] = useState(0);\r\n  const [pixelDemn_SI, setPixelDeMN_SI] = useState<string  | number>(\"\");\r\n  const [pixelDemn_SII, setPixelDeMN_SII] = useState<string | number>(\"\");\r\n\r\n  const generateQrCode = (): { __html: string } => {\r\n    const qr = qrcode(0, \"L\");\r\n    qr.addData(publicToken || \"\");\r\n    qr.make();\r\n    return { __html: qr.createImgTag(4) };\r\n  };\r\n\r\n{/*\r\n // useEffect(() => {if (!userAddress) {\r\n //   return;\r\n // }\r\n //   getPixeldemncount(SERIES_API_LINK).then((values) => {\r\n //     console.log('test')\r\n //     const _deMNTokensEarnedBySeries = values.map((value) => value.length);\r\n //     const _totalTokensEarnedBySeries = _deMNTokensEarnedBySeries.reduce(\r\n //       (total, earnedInSeries) => (total += earnedInSeries),\r\n //       0\r\n //     );\r\n //     setDeMNTokensEarnedBySeries(_deMNTokensEarnedBySeries);\r\n //     setTotalDeMNTokensEarned(_totalTokensEarnedBySeries);\r\n //   });\r\n // }, [userAddress]);\r\n*/}\r\n\r\n\r\n{/*\r\n  useEffect(() => {\r\n    getContracts(SERIES_API_LINK).then((values) => {\r\n      const _deMNTokensEarnedBySeries = values.map((value) => value.length);\r\n      console.log(values.length)\r\n      console.log(values)\r\n      const _totalTokensEarnedBySeries = _deMNTokensEarnedBySeries.reduce(\r\n        (total, earnedInSeries) => (total += earnedInSeries),\r\n        0\r\n      );\r\n      setDeMNTokensEarnedBySeries(_deMNTokensEarnedBySeries);\r\n      setTotalDeMNTokensEarned(_totalTokensEarnedBySeries);\r\n    });\r\n  }, []);  */}\r\n\r\n  useEffect(() => {\r\n    if (!userAddress) {\r\n      return;\r\n    }\r\n    getNatasBalance(userAddress).then((balance) => setNatasBalance(balance));\r\n    getDemnBalance(userAddress).then((balance) => setDemnBalance(balance));\r\n  }, [userAddress]);\r\n\r\n  // useEffect(() => {\r\n  //  if (!userAddress) {\r\n  //    return;\r\n  //  }\r\n  //  getPixelDeMN_SI(userAddress).then((pixeldemnbalance) => setPixelDeMN_SI(pixeldemnbalance));\r\n  //  getPixelDeMN_SII(userAddress).then((pixeldemnbalance) => setPixelDeMN_SII(pixeldemnbalance));\r\n  // }, [userAddress]);\r\n\r\n  if (publicToken && (!userAddress || isNaN(userBalance))) {\r\n    return (\r\n      <div className=\"centerImage\">\r\n        <img src=\"/images/NatasBurnerLogo.png\" alt=\"Buy Natas\" />\r\n        <div id=\"dialog\">\r\n          <p className=\"myhead\">pixeldemn.xyz</p>\r\n          <div id=\"content\">\r\n            <p className=\"text-align-center\">\r\n              <i className=\"fas fa-broadcast-tower\"></i>&nbsp; Connecting to\r\n              your wallet\r\n            </p>\r\n            <div\r\n              dangerouslySetInnerHTML={generateQrCode()}\r\n              className=\"text-align-center\"\r\n            ></div>\r\n            <p id=\"public-token\">\r\n              {copiedPublicToken ? (\r\n                <span id=\"public-token-copy__copied\">\r\n                  <i className=\"far fa-thumbs-up\"></i>\r\n                </span>\r\n              ) : (\r\n                <span\r\n                  id=\"public-token-copy\"\r\n                  onClick={() => {\r\n                    if (publicToken) {\r\n                      navigator.clipboard.writeText(publicToken);\r\n                      setCopiedPublicToken(true);\r\n                      setTimeout(() => setCopiedPublicToken(false), 2000);\r\n                    }\r\n                  }}\r\n                >\r\n                  <i className=\"far fa-copy\"></i>\r\n                </span>\r\n              )}\r\n\r\n              <span>\r\n                Public token: <span>{publicToken}</span>\r\n              </span>\r\n            </p>\r\n            <p className=\"text-align-center\">\r\n              Status: {beaconConnection ? \"Connected\" : \"Disconnected\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        <div id=\"centerImage\">\r\n          <img\r\n            src=\"/images/NatasBurnerLogo.png\"\r\n            alt=\"Natas and Demon Token Logo\"\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (userAddress && !isNaN(userBalance)) {\r\n    return (\r\n      <div className=\"main-box\">\r\n        <img src=\"/images/NatasBurnerLogo.png\" alt=\"Buy Natas\" />\r\n        <div id=\"tabs\">\r\n          <div\r\n            id=\"infotab\"\r\n            className={activeTab === \"infotab\" ? \"active\" : \"\"}\r\n            onClick={() => setActiveTab(\"infotab\")}\r\n          >\r\n            Staked PixelDeMNs\r\n          </div>\r\n\r\n          <div\r\n            id=\"contract\"\r\n            className={activeTab === \"contract\" ? \"active\" : \"\"}\r\n            onClick={() => setActiveTab(\"contract\")}\r\n          >\r\n            NFTs for DeMNs\r\n          </div>\r\n        </div>\r\n        <div id=\"dialog\">\r\n          <div id=\"content\">\r\n            {activeTab === \"infotab\" ? (\r\n              <div>\r\n              <div>\r\n                <p>PixelDeMNs are unique 1/1 NFTs that spawn weekly DeMN Token Drops.\r\n                DeMN Tokens are a Tezos Token with a fixed supply of 1,000,000.\r\n                Your DeMN Tokens can be staked at <a href=\"https://matterdefi.xyz/#/?live=11\"> Crunchy.Network </a> or <a href=\"https://app.crunchy.network/#/farms?f=garden&q=DeMN\"> MatterDeFi.xyz </a> to earn even more rewards. \r\n                Purchase a PixelDeMN NFT at <a href=\"https://objkt.com/profile/tz1SrztDp8MVcbom6T8FMPSRFns4PGFoFqxx/collections\"> Objkt.com </a></p>\r\n                <h2>Your Series I PixelDeMNs</h2>\r\n                <div>\r\n                <MyDeMNs_SI\r\n                  myuserAddress={userAddress}\r\n                />\r\n                </div>\r\n                <h2>Your Series II PixelDeMNs</h2>\r\n                <div>\r\n                <MyDeMNs_SII\r\n                  myuserAddress={userAddress}\r\n                  pixeldemncontract='KT1QctVjmHzMTBBmHLwoYToaodEx7n1BXG1b'\r\n                 />\r\n                </div>\r\n                <h2>Your Series III PixelDeMNs</h2>\r\n                <MyDeMNs_SIII\r\n                  myuserAddress={userAddress}\r\n                  pixeldemncontract='KT1AgMH7AjVGb8G27xjSih4C7pWQSdZ8brSN'\r\n                   />\r\n                        <h2>Your Series IV PixelDeMNs</h2>\r\n                     <MyDeMNs_SIV\r\n                  myuserAddress={userAddress}\r\n                  pixeldemncontract='KT1AgMH7AjVGb8G27xjSih4C7pWQSdZ8brSN'\r\n                   />\r\n </div>\r\n                {/* Earn tokens by series */}\r\n                {deMNTokensEarnedBySeries.map((tokensEarned, index) => (\r\n                  <MyNewDeMNs\r\n                    key={index}\r\n                    tokensEarned={tokensEarned}\r\n                    series={index + 1}\r\n                  />\r\n                ))}\r\n\r\n                {/* Balance */}\r\n                <MyNewBalance balance={demnBalance} name=\"DeMN\" />\r\n                <MyNewBalance balance={natasBalance} name=\"NaTas\" />\r\n\r\n                <h2>\r\n                  {\" \"}\r\n                  UnStaked NaTaS LP / Quipuswap{\" \"}\r\n                </h2> \r\n                <h3>\r\n                  <Crunchy_Natas myuserAddress={userAddress} />\r\n                </h3>\r\n                <h2>\r\n                  {\" \"}\r\n                  UnStaked DeMN LP / Quipuswap{\" \"}\r\n                  </h2>\r\n                  <h3>\r\n                  <Crunchy_DeMN myuserAddress={userAddress} />{\" \"}\r\n                  </h3>\r\n                <h2>Total DeMN Tokens Earned</h2>\r\n                <h3> <DeMNDropTotal\r\n                  myuserAddress={userAddress}\r\n                  pixeldemncontract='KT1AgMH7AjVGb8G27xjSih4C7pWQSdZ8brSN'\r\n                   /></h3>\r\n                <h2>DeMN Tokens Earned This week</h2>\r\n                <h3> <DeMNDropWeek\r\n                  myuserAddress={userAddress}\r\n                  pixeldemncontract='KT1AgMH7AjVGb8G27xjSih4C7pWQSdZ8brSN'\r\n                   /></h3>\r\n                <h2>Current DeMN Token Multiplier</h2>\r\n                <h3>X 0.00 (Coming Soon)</h3>\r\n                <h2>PixelDeMNs Stats</h2>\r\n                <h3>- 54 unique owners -</h3>\r\n                <h3>- 184 Unique PixelDeMNs so far -</h3>\r\n                <h3>- PixelDeMNs earn 21 DeMN Tokens per\\wk -</h3>\r\n              </div>\r\n            ) : (\r\n              <div>\r\n                <h2>Buy with DeMN Tokens</h2>\r\n                <img\r\n                  src=\"/images/DeMNHorde1.jpg\"\r\n                  width=\"150\"\r\n                  height=\"150\"\r\n                  alt=\"Default PixelDeMN Image Placetaker\"\r\n                />\r\n                <div id=\"infotab\">\r\n                  <h3 className=\"text-align-center\">Burn some DeMNs</h3>\r\n                  <p>Receive this DeMN Horde NFT for 666 DeMN Tokens</p>\r\n                  <p>333 of you DeMN Tokens will be Burned</p>\r\n                  <p>Only PixelDeMN NFTs earn DeMN Token Drops</p>\r\n                  <p>Series VI PixelDeMNs will be avalible here first!</p>\r\n                  <SendDeMN\r\n                    Tezos={Tezos}\r\n                    setUserBalance={setUserBalance}\r\n                    userAddress={userAddress}\r\n                  />\r\n                </div>\r\n              </div>\r\n            )}\r\n            <DisconnectButton\r\n              wallet={wallet}\r\n              setPublicToken={setPublicToken}\r\n              setUserAddress={setUserAddress}\r\n              setUserBalance={setUserBalance}\r\n              setWallet={setWallet}\r\n              setTezos={setTezos}\r\n              setBeaconConnection={setBeaconConnection}\r\n            />\r\n            <p>{userAddress}</p>\r\n            <a\r\n              href=\"https://objkt.com/profile/tz1SrztDp8MVcbom6T8FMPSRFns4PGFoFqxx/collections\"\r\n              target=\"_blank\"\r\n            >\r\n              <img src=\"/images/pixeldemnsonobjkt.png\" height=\"150\" />\r\n            </a>\r\n          </div>\r\n        </div>\r\n        <div id=\"footer\">\r\n          <a href=\"https://natastoken.xyz\"> NaTaSToken.xyz </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else if (!publicToken && !userAddress && !userBalance) {\r\n    return (\r\n      <div className=\"main-box\">\r\n        <div id=\"centerImage\">\r\n          <img src=\"/images/NatasBurnerLogo.png\" alt=\"Buy Natas\" />\r\n        </div>\r\n        <div id=\"dialog\">\r\n          <div id=\"content\">\r\n            <p className=\"text-align-center\">\r\n              Earn DeMN Tokens with your PixelDeMNS\r\n              If you have not done so already, go to the&nbsp;\r\n              <a href=\"https://objkt.com/profile/tz1SrztDp8MVcbom6T8FMPSRFns4PGFoFqxx/collections\">\r\n                {\" \"}\r\n                PixelDeMN Objkt page{\" \"}\r\n              </a>\r\n              to get a PixelDeMN and Start Earning\r\n              Thanks\r\n              Beta Test - Not Public\r\n            </p>\r\n          </div>\r\n          <ConnectButton\r\n            Tezos={Tezos}\r\n            setContract={setContract}\r\n            setPublicToken={setPublicToken}\r\n            setWallet={setWallet}\r\n            setUserAddress={setUserAddress}\r\n            setUserBalance={setUserBalance}\r\n            setStorage={setStorage}\r\n            contractAddress={contractAddress}\r\n            setBeaconConnection={setBeaconConnection}\r\n            wallet={wallet}\r\n          />\r\n          <a\r\n            href=\"https://objkt.com/profile/tz1SrztDp8MVcbom6T8FMPSRFns4PGFoFqxx/collections\"\r\n            target=\"_blank\"\r\n          >\r\n            <img src=\"/images/pixeldemnsonobjkt.png\" height=\"150\" />\r\n          </a>\r\n        </div>\r\n        <div id=\"footer\"></div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return <div>An error has occurred</div>;\r\n  }\r\n};\r\n\r\nexport default App;\r\n","import axios from \"../lib/axios\";\r\n\r\nexport function getNatasBalance(address: string) {\r\n  return axios\r\n    .get<{ key: string; value: number }[]>(\r\n      `https://api.tzkt.io/v1/bigmaps/14771/keys?active=true&select=key,value`\r\n    )\r\n    .then((res) => {\r\n      const num = res.data.find((item) => item.key === address);\r\n      if (num) {\r\n        return num.value / Math.pow(10, 0);\r\n      }\r\n\r\n      return 0;\r\n    });\r\n}\r\n\r\nexport function getDemnBalance(address: string) {\r\n  return axios\r\n    .get<{ key: string; value: number }[]>(\r\n      `https://api.tzkt.io/v1/bigmaps/16845/keys?active=true&select=key,value`\r\n    )\r\n    .then((res) => {\r\n      const num = res.data.find((item) => item.key === address);\r\n      if (num) {\r\n        return num.value / Math.pow(10, 8);\r\n      }\r\n\r\n      return 0;\r\n    });\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.tsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n    </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}